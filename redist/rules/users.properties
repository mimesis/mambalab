
usersroomchema.epl = create schema usersRoomSchema(roomId String,roomClass String)
usersroomwindow.epl = create window usersRoomWndow.std:unique(roomId) as select * from usersRoomSchema 
usersroomwindow.action = ActivateRooms

usersdetected.epl = insert into users select * from MyEvent(eventName="start" and eventParam="users")
usersactivated.epl = insert into usersRoomWndow select roomId,roomClass from users
userswelcomemessage.epl = insert into notifyuser select userId,"users activated" as message, "*ECHO*" as title,"Alert" as type from users

# Generic User Management

userjustleft.epl = create schema userJustLeft as MyUser 

createuser.epl = create window users.win:keepall() as MyUser

enteringroom.epl = 	insert into users select userId,user_name as userName,roomId from MyEvent(eventName='ENTER'), \
sql:esper ['select user_name from user where user_id=${userId}']

leavingroom.epl = on MyEvent(eventName='LEAVE')  delete from users where users.userId=MyEvent.userId

useradded.epl = select  * from users

userremoved.epl = insert rstream into userJustLeft select rstream * from users

showusers.epl = @Drop select * from MyEvent(eventName='SAY' and eventParam='SHOWUSERS')
showusers.action = ShowUsers

# Messages when user Enter/Leave room

userwelcome.epl = insert into messages select userId, "Welcome" as message  from users

userbye.epl = insert into messages select userId, "Bye bye" as message from userJustLeft

