echoschema.epl = create schema echoSchema(roomInstance String,roomId int)
echowindow.epl = create window echowindow.std:unique(roomInstance) as select * from echoSchema 
echowindow.action = ActivateRooms

echodetected.epl = insert into echo select * from MyEvent(eventName="start" and eventParam="echo")
echoactivated.epl = insert into echowindow select roomInstance,roomId from echo
initecho.epl = insert into notifyuser select userId,"welcome to the echo room" as message, "*ECHO*" as title,"Alert" as type from echo

echoremoved.epl = insert into echoremoved select * from MyEvent(eventName="stop" and eventParam="echo")
echoroomInstanceeleted.epl = on echoremoved delete from echowindow where echoremoved.roomInstance = echowindow.roomInstance
echoremovedmessage.epl = insert into messages select userId,"room returned to normal" as message from echoremoved

# Simple Echo

usertype.epl = insert into userType select userId,eventParam as message from MyEvent.std:lastevent(),echowindow where echowindow.roomInstance=MyEvent.roomInstance and eventName='SAY'
echotype.epl = insert into notifyuser select p.userId as userId,p.message as message, "Echo" as title, "Alert" as type from pattern [ every p=userType -> timer:interval(2 sec)]